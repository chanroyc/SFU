/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package streamlinedgradingsystem;

import java.io.*;
import java.io.File;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author chanroyc
 */
public class MultipleChoice extends javax.swing.JFrame {

    /**
     * Creates new form MultipleChoice
     */
    
    private ArrayList<String> solutions = new ArrayList<String>();
    private ArrayList<String> submissions = new ArrayList<String>();
    private boolean solutionchosen = false;
    private boolean submissionchosen = false;
    public MultipleChoice() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        solutionpath = new javax.swing.JTextField();
        solutionbrowse = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        submissionpath = new javax.swing.JTextField();
        jlabel3 = new javax.swing.JLabel();
        submissionbrowse = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Grade Multiple Choice");

        solutionpath.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        solutionpath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionpathActionPerformed(evt);
            }
        });

        solutionbrowse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        solutionbrowse.setText("Browse");
        solutionbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionbrowseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Please load a solution file:");

        submissionpath.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        submissionpath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submissionpathActionPerformed(evt);
            }
        });

        jlabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabel3.setText("Please load student submission file:");

        submissionbrowse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        submissionbrowse.setText("Browse");
        submissionbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submissionbrowseActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Grade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(237, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(231, 231, 231))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(submissionpath, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(solutionpath))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submissionbrowse, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(solutionbrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(130, 130, 130))))
            .addGroup(layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solutionpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionbrowse))
                .addGap(40, 40, 40)
                .addComponent(jlabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submissionpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submissionbrowse))
                .addGap(65, 65, 65)
                .addComponent(jButton1)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void solutionbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionbrowseActionPerformed
        // TODO add your handling code here:
        JFileChooser input = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Comma Seperated Values (.csv)", "csv");
        input.setFileFilter(filter);
        BufferedReader in;
        FileReader reader = null;
        File f;
        String inputLine = null;
        String token;
        int i=0;
        
        
        int result = input.showOpenDialog(this);
        try{
        if (result == JFileChooser.APPROVE_OPTION){
            f = input.getSelectedFile();
            String filename = f.getAbsolutePath();
            solutionpath.setText(filename);
            solutionchosen = true;
            
            if (f.canRead() && f.exists()){
                    reader = new FileReader(f);
            }
            in = new BufferedReader(reader);
            inputLine = in.readLine();
            
            

            int LineNumber = 0;
            while(inputLine!=null)
            {
                LineNumber++;
                StringTokenizer tokenizer = new StringTokenizer(inputLine, ",", true);
                i = 0;
                while(tokenizer.hasMoreTokens()){
                    token = tokenizer.nextToken(); 
                    if (token.equals(",")){
                        if(tokenizer.hasMoreTokens()){
                            token = tokenizer.nextToken();
                        }
                            if(token.equals(",")){
                                if(tokenizer.hasMoreTokens()){
                                    solutions.add("N/A");
                                    token = tokenizer.nextToken();
                                }
                            }
                    }
                    solutions.add(token);
                }
                System.out.println("Line Number "+LineNumber+": "+inputLine);
                //System.out.println("Array of Solutions: "+solutions+"\n");
                
                inputLine = in.readLine();
            }
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(MultipleChoice.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("File not chosen.");
        }
        }catch(IOException ex){
            System.out.println("Error Processing File: \n");
        }catch(NullPointerException ex){
            System.out.println("Open File Cancelled: \n");
        }

    }//GEN-LAST:event_solutionbrowseActionPerformed

    private void solutionpathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionpathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_solutionpathActionPerformed

    private void submissionpathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submissionpathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_submissionpathActionPerformed

    private void submissionbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submissionbrowseActionPerformed
        // TODO add your handling code here:
        JFileChooser input = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Comma Seperated Values (.csv)", "csv");
        input.setFileFilter(filter);
        BufferedReader in;
        FileReader reader = null;
        File f;
        String previous_token = "nocomma";
        String inputLine = null;
        String token;
        int i=0;
        
        
        
        int result = input.showOpenDialog(this);
        try{
        if (result == JFileChooser.APPROVE_OPTION){
            f = input.getSelectedFile();
            String filename = f.getAbsolutePath();
            submissionpath.setText(filename);
            submissionchosen = true;
            
            if (f.canRead() && f.exists()){
                    reader = new FileReader(f);
            }
            in = new BufferedReader(reader);
            inputLine = in.readLine();
                       

            int LineNumber = 0;
            while(inputLine!=null)
            {
                LineNumber++;
                StringTokenizer tokenizer = new StringTokenizer(inputLine, ",", true);
                i = 0;
                while(tokenizer.hasMoreTokens()){
                   token = tokenizer.nextToken();
                    if(token.equals(",") && previous_token.equals("nocomma")){
                        if(tokenizer.hasMoreTokens()){
                            token = tokenizer.nextToken();
                                                        
                        } 
                        if (token.equals(",")){
                                submissions.add("N/A");
                                previous_token = ",";
                                System.out.println("11111111111111111");
                            }                        
                    }else if(token.equals(",") && previous_token.equals(",")){
                       submissions.add("N/A");
                       previous_token = ",";                        
                       System.out.println("22222222222222222");
                    }else{
                        submissions.add(token);
                        previous_token = "nocomma";                        
                    }
                }
                System.out.println("Line Number "+LineNumber+": "+inputLine);
                //System.out.println("Array of Solutions: "+solutions+"\n");
                System.out.println(submissions);
                
                inputLine = in.readLine();
            }
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(MultipleChoice.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("File not chosen.");
        }
        }catch(IOException ex){
            System.out.println("Error Processing File: \n");
        }catch(NullPointerException ex){
            System.out.println("Open File Cancelled: \n");
        }

    }//GEN-LAST:event_submissionbrowseActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MultipleChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MultipleChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MultipleChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MultipleChoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MultipleChoice().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel jlabel3;
    private javax.swing.JButton solutionbrowse;
    private javax.swing.JTextField solutionpath;
    private javax.swing.JButton submissionbrowse;
    private javax.swing.JTextField submissionpath;
    // End of variables declaration//GEN-END:variables
}
