/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package streamlinedgradingsystem;

import ca.sfu.cmpt275.deliverable.colinq.Activity;
import ca.sfu.cmpt275.deliverable.colinq.Course;
import ca.sfu.cmpt275.deliverable.colinq.User;
import ca.sfu.cmpt275.deliverable.telunc.CreateRubric;
import ca.sfu.cmpt275.deliverable.telunc.ProgrammingTestGUI;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Date;
import java.util.*;
import java.text.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author jsargent
 */
public class CreateProgrammingActivity extends javax.swing.JFrame {

    /**
     * Creates new form ProgramActivityForm
     */    
    private User userModel;
    private Course courseModel;
    private ProgrammingTest test;
    Activity programming;
    String actName;
    String solPath;
    String language;
    String actType;
    String subPath;
    String dueDate;
    int numberOfTest;
    int courseid;
    SimpleDateFormat format;
    boolean createRubric = false;
    boolean createProgrammingTest = false;
    String sqlString1;
    int index = 0;
    String ide;
    int actID;   
    JFileChooser chooser;
    boolean createActivity = false;
       
    //constructor
    public CreateProgrammingActivity(User userModel, Course courseModel) {
        
        test = new ProgrammingTest();
        this.userModel = userModel;
        this.courseModel = courseModel;
        programming = new ProgrammingActivity();
        format = new SimpleDateFormat("yyyy-mm-dd");       
        initComponents();             
        chooser = new JFileChooser();               
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameField = new javax.swing.JTextField();
        activityName = new javax.swing.JLabel();
        activityLanguage = new javax.swing.JLabel();
        actDueDate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        solutionPathFIeld = new javax.swing.JTextField();
        submissionPathField = new javax.swing.JTextField();
        dueDateLabel = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        backButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        ideTextField = new javax.swing.JTextField();
        languageComboBox = new javax.swing.JComboBox();
        submissionPathButton = new javax.swing.JButton();
        solutionPathButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        numTest = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        createProgrammingTestCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 700));

        nameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        activityName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        activityName.setText("Activity Name:");

        activityLanguage.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        activityLanguage.setText("Language:");

        actDueDate.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        actDueDate.setText("Due Date:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Create Rubric:");

        solutionPathFIeld.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        solutionPathFIeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionPathFIeldActionPerformed(evt);
            }
        });

        submissionPathField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        submissionPathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submissionPathFieldActionPerformed(evt);
            }
        });

        dueDateLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        dueDateLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dueDateLabelActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Create Programming Activities");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jCheckBox1.setText(" ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel13.setText("IDE:");

        ideTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ideTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ideTextFieldActionPerformed(evt);
            }
        });

        languageComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        languageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JAVA", "C++", "PYTHON" }));
        languageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageComboBoxActionPerformed(evt);
            }
        });

        submissionPathButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        submissionPathButton.setText("Submission Path:");
        submissionPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submissionPathButtonActionPerformed(evt);
            }
        });

        solutionPathButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        solutionPathButton.setText("Solution Path");
        solutionPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solutionPathButtonActionPerformed(evt);
            }
        });

        createButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Number of Test:");

        numTest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        numTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numTestActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Create Programming Test");

        createProgrammingTestCheckBox.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        createProgrammingTestCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProgrammingTestCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activityName)
                    .addComponent(actDueDate)
                    .addComponent(activityLanguage)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createProgrammingTestCheckBox)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(backButton)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(solutionPathButton)
                                    .addComponent(submissionPathButton)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel3))
                                .addGap(91, 91, 91)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numTest, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(submissionPathField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(solutionPathFIeld, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(createButton)))))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(370, 370, 370))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel7)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityName)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionPathButton)
                    .addComponent(solutionPathFIeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actDueDate)
                    .addComponent(dueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submissionPathButton)
                    .addComponent(submissionPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityLanguage)
                    .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(ideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel3)
                    .addComponent(numTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(createProgrammingTestCheckBox))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(backButton))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //set activity name
    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        
       actName = nameField.getText();
    }//GEN-LAST:event_nameFieldActionPerformed
    //set due date
    private void dueDateLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dueDateLabelActionPerformed

        dueDate = dueDateLabel.getText();
            
    }//GEN-LAST:event_dueDateLabelActionPerformed
    //set solution path
    private void solutionPathFIeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionPathFIeldActionPerformed
        solPath = solutionPathFIeld.getText();
    }//GEN-LAST:event_solutionPathFIeldActionPerformed
    //check to see if create Rubric is checked
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
                
        createRubric = true;                                     
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    //create activity 
    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
                
        actName = nameField.getText();     
        actType = Activity.PROGRAMMING_TYPE;        
        dueDate = dueDateLabel.getText();       
        language = programming.getLanguage();                            
        subPath = submissionPathField.getText();        
        numberOfTest = Integer.parseInt(numTest.getText());      
        programming.setNumTests(numberOfTest);       
        solPath = solutionPathFIeld.getText();
               
        String USER = "c275g11";
        String PASS = "bL344y3Emh2dPtaT";        
        String DB_URL = "jdbc:sqlserver://cypress;";        
        	 
        Connection conn = null;
	Statement stmt = null; 
        
        if(validateActivity()){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String sql;
            String sql_getData;
                                                              	                                        
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();                                                                                                              

             generateUniqueRandomActID(stmt);
             programming.setActivityID(actID);
                    sql = "insert into Activity "
                            + "values(" + actID + ", " + courseModel.getCourseID() +  
                            ", '" + actName + "', '" + actType + "', '" + dueDate + "','" + 
                            language + "', '" + subPath + "', '" +  numberOfTest + "','" + solPath + "')";
                    
                                                          
                    stmt.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null,"add item success","success", JOptionPane.INFORMATION_MESSAGE);

                    stmt.close();
                    conn.close();
                    
                    if(createRubric) {
                        new CreateRubric(actID).setVisible(true);
                    }
                    if(createProgrammingTest){
                     
                        new ProgrammingTestGUI(userModel, courseModel, programming).setVisible(true);
                        System.out.println(Integer.toString(programming.getActivityID()));
                    }
        }
        catch(SQLException se){
                //Handle errors for JDBC
                JOptionPane.showMessageDialog(null,se,"SQLException", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
                //Handle errors for Class.forName
                JOptionPane.showMessageDialog(null,e,"Exception", JOptionPane.INFORMATION_MESSAGE);
        }
        }
        createActivity = true;
    }//GEN-LAST:event_createButtonActionPerformed
    
    
    private void submissionPathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submissionPathFieldActionPerformed
      //  subPath = submissionPathField.getText();
    }//GEN-LAST:event_submissionPathFieldActionPerformed
    
    //set programming language
    private void languageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageComboBoxActionPerformed
            if(languageComboBox.getSelectedIndex() == 0){
               programming.setLanguage("JAVA");               
                 ideTextField.setText("Eclipse");
                 test.setEnvironment("Elipse");
                 
            }           
            else if(languageComboBox.getSelectedIndex() == 1){
                 programming.setLanguage("C++");
                 ideTextField.setText("Visual Studio");
                 test.setEnvironment("Visual Studio");
            }
            else if(languageComboBox.getSelectedIndex() == 2){
                programming.setLanguage("PYTHON");
                ideTextField.setText("IDLE");
                test.setEnvironment("IDLE");
            }
            
    }//GEN-LAST:event_languageComboBoxActionPerformed

    private void ideTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ideTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ideTextFieldActionPerformed
    
   //generate unique activity id
    private void generateUniqueRandomActID(Statement stmt) {
        try {
            actID = generateRandomID();
            String getActID_sql = "SELECT activityID FROM Activity WHERE courseID = " + 
                    courseModel.getCourseID() + " AND activityID = " + actID;
            ResultSet rs = stmt.executeQuery(getActID_sql);
            int resultCounter = 0;
            System.out.println("ActID is: " + actID);
            while(rs.next()) {
                resultCounter++;    
            }
            if(resultCounter > 0) {
                generateUniqueRandomActID(stmt);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreateProgrammingActivity_old.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //randomly generate id
    private int generateRandomID() {
        Random rand = new Random();
        int randomID = rand.nextInt(Integer.MAX_VALUE) + 10;
        return randomID;
    }
    //set solution path
    private void solutionPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solutionPathButtonActionPerformed
       
        chooser.setDialogTitle("Specify a path to save");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int pathSelect = chooser.showOpenDialog(null);       
        File f = chooser.getSelectedFile();
        String solPathName=f.getAbsolutePath();
        solutionPathFIeld.setText(solPathName);                         
        
    }//GEN-LAST:event_solutionPathButtonActionPerformed
    //set submission path
    private void submissionPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submissionPathButtonActionPerformed
       
        chooser.setDialogTitle("Specify a path to save");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int path = chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String subPathName=f.getAbsolutePath();
        submissionPathField.setText(subPathName);
        
    }//GEN-LAST:event_submissionPathButtonActionPerformed

   //set number of test
    private void numTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numTestActionPerformed
        numberOfTest = Integer.parseInt(numTest.getText());
    }//GEN-LAST:event_numTestActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        new CreateActivity(userModel, courseModel).setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_backButtonActionPerformed
    //check if create programming test is checked
    private void createProgrammingTestCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProgrammingTestCheckBoxActionPerformed
        createProgrammingTest = true;
        
    }//GEN-LAST:event_createProgrammingTestCheckBoxActionPerformed
    //make sure all required text boxes are filled
    private boolean validateActivity(){
        if(actName.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null,
                           "Please enter an activity name!" , "Reminder" , 
                           JOptionPane.INFORMATION_MESSAGE);
                           return false;
        }                           
        else if(language.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null,
                           "Please enter a language!" , "Reminder" , 
                           JOptionPane.INFORMATION_MESSAGE);
                           return false;
        }
        else if(solPath.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null,
                           "Please enter a solution path!" , "Reminder" , 
                           JOptionPane.INFORMATION_MESSAGE);
                           return false;
        }
        else if(numTest.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,
                           "Please enter number of test!" , "Reminder" , 
                           JOptionPane.INFORMATION_MESSAGE);
                           return false;
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
//   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actDueDate;
    private javax.swing.JLabel activityLanguage;
    private javax.swing.JLabel activityName;
    private javax.swing.JButton backButton;
    private javax.swing.JButton createButton;
    private javax.swing.JCheckBox createProgrammingTestCheckBox;
    private javax.swing.JTextField dueDateLabel;
    private javax.swing.JTextField ideTextField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox languageComboBox;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numTest;
    private javax.swing.JButton solutionPathButton;
    private javax.swing.JTextField solutionPathFIeld;
    private javax.swing.JButton submissionPathButton;
    private javax.swing.JTextField submissionPathField;
    // End of variables declaration//GEN-END:variables
}
