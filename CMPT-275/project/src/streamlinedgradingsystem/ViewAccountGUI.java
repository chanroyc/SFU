/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package streamlinedgradingsystem;

import ca.sfu.cmpt275.deliverable.colinq.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author colinq
 */
public class ViewAccountGUI extends javax.swing.JFrame {
    
    private final int EMPLOYEEID_INDEX = 0;
    private User userModel;
    private User chosenUser = null;
    private UserManager userManager = new UserManager();
    private Connection con;
    /**
     * Creates new form ViewAccountGUI
     */
    public ViewAccountGUI(User userModel) {
        this.userModel = userModel;
        
        initComponents();
        connectToDatabase();
        loadAccountsIntoModel();
        addItemsToComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        blockAccountButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewAccountComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        unblockAccountButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        employeeIDLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        middleNameLabel = new javax.swing.JLabel();
        loginIDLabel = new javax.swing.JLabel();
        rolesLabel = new javax.swing.JLabel();
        accountAccessLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        modifyAccountButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        accountIDLabel = new javax.swing.JLabel();
        deleteAccount = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        blockAccountButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        blockAccountButton1.setText("Block Account");
        blockAccountButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockAccountButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("View Account");

        viewAccountComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAccountComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Please select an account (employee ID, first, middle, last):");

        backButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        unblockAccountButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        unblockAccountButton.setText("Unblock Account");
        unblockAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unblockAccountButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("User Information:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("First Name:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Middle Name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Last Name:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Employee ID:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Login ID:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Password:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Roles:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Is Account Blocked:");

        employeeIDLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        employeeIDLabel.setText("jLabel12");

        firstNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        firstNameLabel.setText("jLabel12");

        lastNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lastNameLabel.setText("jLabel12");

        middleNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        middleNameLabel.setText("jLabel12");

        loginIDLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loginIDLabel.setText("jLabel12");

        rolesLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rolesLabel.setText("jLabel12");

        accountAccessLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        accountAccessLabel.setText("jLabel12");

        passwordLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwordLabel.setText("jLabel12");

        modifyAccountButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modifyAccountButton.setText("Modify");
        modifyAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyAccountButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Account iD:");

        accountIDLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        accountIDLabel.setText("jLabel12");

        deleteAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteAccount.setText("Delete Account");
        deleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(261, 261, 261))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(middleNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(loginIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(blockAccountButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(43, 43, 43)
                                    .addComponent(unblockAccountButton)
                                    .addGap(44, 44, 44)
                                    .addComponent(deleteAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(viewAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(26, 26, 26)
                                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel12))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(modifyAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(53, 53, 53))
                                        .addComponent(accountIDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(accountAccessLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(rolesLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(employeeIDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(86, 86, 86))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blockAccountButton1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(unblockAccountButton)
                        .addComponent(deleteAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(loginIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(middleNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lastNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(accountIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(employeeIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(passwordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(rolesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(accountAccessLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageAccountsGUI(userModel).setVisible(true);
            }
        });
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewAccountComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAccountComboBoxActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String selectedItem = (String)cb.getSelectedItem();
        int selectedID = Integer.parseInt(selectedItem.split(",")[EMPLOYEEID_INDEX]);
        chosenUser = userManager.getUser(selectedID);
        displayUserInfo();
    }//GEN-LAST:event_viewAccountComboBoxActionPerformed

    private void blockAccountButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockAccountButton1ActionPerformed
        if (chosenUser == null) {
            JOptionPane.showMessageDialog(null,
                    "Please select a user account first.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (chosenUser.getAccount().isBlocked() == 1) {
                JOptionPane.showMessageDialog(null,
                    "The selected user account has already been blocked!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            } else {
                int n = JOptionPane.showConfirmDialog(this,
                        "Are you sure to block account " + 
                                Integer.toString(chosenUser.getAccount().getAccountID()) + " ?",
                        "Warning",
                        JOptionPane.YES_NO_OPTION);
                if (n == JOptionPane.YES_OPTION) {
                    chosenUser.getAccount().blockAccount();
                    String sql = "UPDATE Account SET islocked = 1 WHERE accountID = " + chosenUser.getAccount().getAccountID();
                    executeUpdate(sql);
                    JOptionPane.showMessageDialog(null,
                        "Block Successful!",
                        "Information",
                        JOptionPane.INFORMATION_MESSAGE);
                    displayUserInfo();
                }
            }
        }
    }//GEN-LAST:event_blockAccountButton1ActionPerformed

    private void unblockAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unblockAccountButtonActionPerformed
         if (chosenUser == null) {
            JOptionPane.showMessageDialog(null,
                    "Please select a user account first.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
             if (chosenUser.getAccount().isBlocked() == 0) {
                 JOptionPane.showMessageDialog(null,
                         "The selected user account is not currently being blocked!",
                         "Error",
                         JOptionPane.ERROR_MESSAGE);
             } else {
                 int n = JOptionPane.showConfirmDialog(this,
                         "Are you sure to unblock account " +
                                 Integer.toString(chosenUser.getAccount().getAccountID()) + " ?",
                         "Warning",
                         JOptionPane.YES_NO_OPTION);
                 if (n == JOptionPane.YES_OPTION) {
                     chosenUser.getAccount().unBlockAccount();
                     String sql = "UPDATE Account SET islocked = 0 WHERE accountID = " + chosenUser.getAccount().getAccountID();
                     executeUpdate(sql);
                     JOptionPane.showMessageDialog(null,
                             "UnBlock Successful!",
                             "Information",
                             JOptionPane.INFORMATION_MESSAGE);
                     displayUserInfo();
                 }
             }
         }
    }//GEN-LAST:event_unblockAccountButtonActionPerformed

    private void modifyAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyAccountButtonActionPerformed
        if (chosenUser == null) {
            JOptionPane.showMessageDialog(null,
                    "Please select a user account first.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            this.setVisible(false);
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ModifyAccountGUI(userModel, chosenUser).setVisible(true);
                }
            });
        }  
    }//GEN-LAST:event_modifyAccountButtonActionPerformed

    private void deleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountActionPerformed
        if (chosenUser == null) {
            JOptionPane.showMessageDialog(null,
                    "Please select a user account first.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String sql = "DELETE FROM Account WHERE accountID = " 
                    + chosenUser.getAccount().getAccountID();
            if (executeUpdate(sql)) {
                JOptionPane.showMessageDialog(null,
                    "Deletion Successful!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteAccountActionPerformed

    private void addItemsToComboBox() {
        ArrayList<User> users = userManager.getUsers();
        for (User user : users) {
            String userItem = "";
            userItem = user.getEmployeeID() + ", " + user.getFirstName().trim() + ", " +
                        user.getMiddleName().trim() + ", " + user.getLastName().trim();
            viewAccountComboBox.addItem(userItem);
        }
    }
    
    private void displayUserInfo() {
        employeeIDLabel.setText(Integer.toString(chosenUser.getEmployeeID()));
        firstNameLabel.setText(chosenUser.getFirstName());
        middleNameLabel.setText(chosenUser.getMiddleName());
        lastNameLabel.setText(chosenUser.getLastName());
        accountIDLabel.setText(Integer.toString(chosenUser.getAccount().getAccountID()));
        loginIDLabel.setText(chosenUser.getAccount().getLoginID());
        passwordLabel.setText(chosenUser.getAccount().getPassword());
        
        String roleText = "";
        ArrayList<String> roles = chosenUser.getAccount().getRoles();
        for (int i=0; i<roles.size()-1; i++) {
            roleText = roleText + roles.get(i) + ", ";
        }
        if (!roles.isEmpty()) {
            roleText = roleText + roles.get(roles.size()-1);
        } else {
            roleText = "There is no roles currently associated with this account.";
        }
        
        rolesLabel.setText(roleText);
        
        if(chosenUser.getAccount().isBlocked() == 1) {
            accountAccessLabel.setText("Yes");
        } else {
            accountAccessLabel.setText("No");
        }
    }
            
    private boolean executeUpdate(String sql) {
            try {
                Statement stmt = con.createStatement();
                stmt.executeUpdate(sql);
                return true;
            } catch (SQLException ex) {
                ex.printStackTrace();
                Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
                return false;
                
            }
    }
    
    private void connectToDatabase() {
        String userName = "c275g11";
        String password = "bL344y3Emh2dPtaT";
        String url = "jdbc:sqlserver://cypress;" +
                "user = " + userName + ";" +
                "password = " + password;
        
        // DEBUGG-------------------------
        System.out.println("\n connectionUrl = " + url + "\n\n");
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        }catch(ClassNotFoundException ce) {
            System.out.println("\n\nNo JDBC dirver; exit now.\n\n");
            return;
        }
        
        try {
            con = DriverManager.getConnection(url);
        } catch (SQLException se) {
            System.out.println("\n\nFail to connect to CSIL SQL Server; exit now.\n\n");
            return;
        }
    }
    
    private void loadAccountsIntoModel() {
        try {
            PreparedStatement stat = con.prepareStatement(
                    "SELECT * FROM Account");
            ResultSet accounts = executeQuery(stat);
            processAccountInfo(accounts);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    private ResultSet executeQuery(PreparedStatement pstmt) {
        try {
            return(pstmt.executeQuery());
        } catch (SQLException se){
            System.out.println("\nSQL Exception occured, the state : "+
                    se.getSQLState()+"\nMessage:\n"+se.getMessage()+"\n");
            return null;
        }
    }
    
    private void processAccountInfo(ResultSet accounts) throws SQLException {
        
        while(accounts.next()) {
            User nextUser = new User();
            UserAccount nextUserAccount = new UserAccount();
            
            nextUser.setFirstName(accounts.getString("firstName"));
            nextUser.setMiddleName(accounts.getString("middleName"));
            nextUser.setLastName(accounts.getString("lastName"));
            nextUser.setEmployeeID(accounts.getInt("employeeID"));
            nextUserAccount.setLoginID(accounts.getString("loginID"));
            nextUserAccount.setAccountID(accounts.getInt("accountID"));
            nextUserAccount.setPassword(accounts.getString("password"));
            if (accounts.getInt("islocked") == 1) {
                nextUserAccount.blockAccount();
            } else {
                nextUserAccount.unBlockAccount();
            }
            if (accounts.getInt("ispasswdtemp") == 1) {
                nextUserAccount.makePasswordTemp();
            } else {
                nextUserAccount.makePassReal();
            }
            if (accounts.getInt("isAdministrator") == 1) {
                nextUserAccount.addRole(User.ADMINISTRATOR);
            }
            if (accounts.getInt("isAssistAdmin") == 1) {
                nextUserAccount.addRole(User.ADMINISTRATIVE_ASSISTANT);
            }
            if (accounts.getInt("isSysAdmin") == 1) {
                nextUserAccount.addRole(User.SYSTEM_ADMINISTRATOR);
            }
            if (accounts.getInt("isTA") == 1) {
                nextUserAccount.addRole(User.TA);
            }
            if (accounts.getInt("isInstructor") == 1){
                nextUserAccount.addRole(User.INSTRUCTOR);
            }
            
            nextUser.addAccount(nextUserAccount);
            userManager.addUser(nextUser);
        }
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ViewAccountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ViewAccountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ViewAccountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ViewAccountGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ViewAccountGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountAccessLabel;
    private javax.swing.JLabel accountIDLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JButton blockAccountButton1;
    private javax.swing.JButton deleteAccount;
    private javax.swing.JLabel employeeIDLabel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel loginIDLabel;
    private javax.swing.JLabel middleNameLabel;
    private javax.swing.JButton modifyAccountButton;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel rolesLabel;
    private javax.swing.JButton unblockAccountButton;
    private javax.swing.JComboBox viewAccountComboBox;
    // End of variables declaration//GEN-END:variables
}
