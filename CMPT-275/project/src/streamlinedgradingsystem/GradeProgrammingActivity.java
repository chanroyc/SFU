/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package streamlinedgradingsystem;


import ca.sfu.cmpt275.deliverable.colinq.Activity;
import ca.sfu.cmpt275.deliverable.colinq.Course;
import ca.sfu.cmpt275.deliverable.colinq.User;
import java.io.File;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author zhic
 */
public class GradeProgrammingActivity extends javax.swing.JFrame {

	/**
	 * Creates new form GradeProgrammingActivity
	 */
	private boolean isrowselected = false;
	private int selectedGradeID;
	private double Grade;
        private int MaxGrade;
        private int selectedActivityID;
        private int selectedstudentID;
        
        private int studentID;
        private User userModel;
        private Course courseModel;
        private Activity activityModel;
        
	public GradeProgrammingActivity(User userModel,Course courseModel,Activity activityModel,int studentID) {
                this.userModel=userModel;
                this.courseModel=courseModel;
                this.activityModel=activityModel;
                this.selectedstudentID = studentID;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        GradeTable = new javax.swing.JTable();
        GradeField = new javax.swing.JTextField();
        ReviewGrade = new javax.swing.JButton();
        SaveGrade1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Grade Programming activity");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Compile Submission");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Compile Solution");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        GradeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GradeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GradeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(GradeTable);

        GradeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GradeFieldActionPerformed(evt);
            }
        });

        ReviewGrade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ReviewGrade.setText("Refresh & View");
        ReviewGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReviewGradeActionPerformed(evt);
            }
        });

        SaveGrade1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SaveGrade1.setText("Save");
        SaveGrade1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveGrade1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Grade:");

        BackButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Grading Table:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(jButton2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(GradeField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(SaveGrade1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(289, 289, 289)
                                .addComponent(ReviewGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GradeField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveGrade1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReviewGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		try {

			Runtime rt = Runtime.getRuntime();
			String[] testArgs = {"cmd.exe","/c","start"};

			rt.exec(testArgs);


		} catch (Exception e) {
			System.err.println("Exception: " + e.getMessage());
		}        // TODO add your handling code here:
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		try {

			Runtime rt = Runtime.getRuntime();
			String[] testArgs = {"cmd.exe","/c","start"};

			rt.exec(testArgs);


		} catch (Exception e) {
			System.err.println("Exception: " + e.getMessage());
		}        // TODO add your handling code here:
	}//GEN-LAST:event_jButton2ActionPerformed

	private void GradeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GradeTableMouseClicked

		isrowselected = true;
		int row=GradeTable.getSelectedRow();
		String table_click=(GradeTable.getModel().getValueAt(row, 0).toString());
                String getMaxGrade=(GradeTable.getModel().getValueAt(row, 2).toString());
                MaxGrade = Integer.parseInt(getMaxGrade);
		//JOptionPane.showMessageDialog(null,e,"Exception", JOptionPane.INFORMATION_MESSAGE);
		try{
			int GradeID=Integer.parseInt(table_click);
			selectedGradeID=GradeID;
			JOptionPane.showMessageDialog(null,"selected gradeID is "+selectedGradeID,"Exception", JOptionPane.INFORMATION_MESSAGE);
		}catch(Exception e){
			//Handle errors for Class.forName
			JOptionPane.showMessageDialog(null,e,"Exception", JOptionPane.INFORMATION_MESSAGE);
		}

	}//GEN-LAST:event_GradeTableMouseClicked

	private void GradeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GradeFieldActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_GradeFieldActionPerformed

	private void ReviewGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReviewGradeActionPerformed
		// TODO add your handling code here:
            selectedActivityID = activityModel.getActivityID();
            
            
		String DB_URL = "jdbc:sqlserver://cypress;";
		String USER = "c275g11";
		String PASS = "bL344y3Emh2dPtaT";
		Connection conn = null;
		Statement stmt = null;

		try{

			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
			conn = DriverManager.getConnection(DB_URL,USER,PASS);
			String sql;
			sql="select G.GradeID, R.rubricItemText, R.rubricItemValue, G.earnedGrade from RubricItem R inner join Grade G on R.rubricItemID = G.rubricItemID where activityID="+selectedActivityID+"AND studentID="+selectedstudentID+"";
			stmt = conn.createStatement();
			ResultSet rs = stmt.executeQuery(sql);
			GradeTable.setModel(DbUtils.resultSetToTableModel(rs));
			rs.close();
			stmt.close();
			conn.close();

		}
		catch(SQLException se){
			//Handle errors for JDBC
			JOptionPane.showMessageDialog(null,se,"SQLException", JOptionPane.INFORMATION_MESSAGE);
		}catch(Exception e){
			//Handle errors for Class.forName
			JOptionPane.showMessageDialog(null,e,"Exception", JOptionPane.INFORMATION_MESSAGE);
		}
	}//GEN-LAST:event_ReviewGradeActionPerformed

	private void SaveGrade1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveGrade1ActionPerformed

		if(isrowselected == true){
			String DB_URL = "jdbc:sqlserver://cypress;";
			String USER = "c275g11";
			String PASS = "bL344y3Emh2dPtaT";
			Connection conn = null;
			Statement stmt = null;

			try{
				Grade = Double.parseDouble(GradeField.getText());
				System.out.println("grade is "+Grade);
			}
			catch(Exception e){
				//Handle errors for Class.forName
				JOptionPane.showMessageDialog(null,"Please enter a float grade","Error", JOptionPane.INFORMATION_MESSAGE);
			}
                        
                        if (Grade < 0){
                            JOptionPane.showMessageDialog(null,"Please enter a float grade not less than 0","Wrong Grade", JOptionPane.INFORMATION_MESSAGE);
                                return;       
                            } 

			try{
				Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
				conn = DriverManager.getConnection(DB_URL,USER,PASS);
				String sql;
				sql="update Grade set earnedGrade ="+ Grade +"where gradeID =" + selectedGradeID + "";
				stmt = conn.createStatement();
				stmt.executeUpdate(sql);
				stmt.close();
				conn.close();
				isrowselected = false;

			}
			catch(SQLException se){
				//Handle errors for JDBC
				JOptionPane.showMessageDialog(null,se,"SQLException", JOptionPane.INFORMATION_MESSAGE);
			}catch(Exception e){
				//Handle errors for Class.forName
				JOptionPane.showMessageDialog(null,e,"Exception", JOptionPane.INFORMATION_MESSAGE);
			}

			JOptionPane.showMessageDialog(null,"Grade is successfully saved!","Success", JOptionPane.INFORMATION_MESSAGE);

		}

		else{
			JOptionPane.showMessageDialog(null,"Please select a item (row) in the table","Error", JOptionPane.INFORMATION_MESSAGE);
		}

	}//GEN-LAST:event_SaveGrade1ActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        this.setVisible(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GradeActivityChoose(userModel, courseModel).setVisible(true);
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_BackButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
//	public static void main(String args[]) {
//		/* Set the Nimbus look and feel */
//		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//		 */
//		try {
//			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//				if ("Nimbus".equals(info.getName())) {
//					javax.swing.UIManager.setLookAndFeel(info.getClassName());
//					break;
//				}
//			}
//		} catch (ClassNotFoundException ex) {
//			java.util.logging.Logger.getLogger(GradeProgrammingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		} catch (InstantiationException ex) {
//			java.util.logging.Logger.getLogger(GradeProgrammingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		} catch (IllegalAccessException ex) {
//			java.util.logging.Logger.getLogger(GradeProgrammingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
//			java.util.logging.Logger.getLogger(GradeProgrammingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//		}
//		//</editor-fold>
//
//		/* Create and display the form */
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				new GradeProgrammingActivity().setVisible(true);
//			}
//		});
//	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTextField GradeField;
    private javax.swing.JTable GradeTable;
    private javax.swing.JButton ReviewGrade;
    private javax.swing.JButton SaveGrade1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
