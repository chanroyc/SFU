library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;

entity cpe is
	port(state : in std_logic_vector(3 downto 0);
		sel : out std_logic_vector(2 downto 0);
		lir,s0,lr,wt,c0,clp,lp,up,cs,r : out std_logic
	);                      
end cpe;

architecture behav of cpe is
type memory is array (0 to 15) of std_logic_vector(15 downto 0);
begin
	process is
		variable ROM : memory;
		variable sel_val : std_logic_vector(2 downto 0);
		variable state_val : natural;
		variable temp : std_logic_vector(15 downto 0);
		begin
		state_val := to_integer(state);
		-- ROM memory contents:
		ROM(0) := "000"&"0001"&"100"&"00"&"0000"; -- INIT
		ROM(1) := "000"&"0000"&"000"&"11"&"0000"; -- F1
		ROM(2) := "000"&"1000"&"001"&"00"&"0000"; -- F2
		ROM(3) := "000"&"0000"&"000"&"00"&"0000"; -- DCD
		ROM(4) := "000"&"0110"&"000"&"00"&"0110"; -- add
		ROM(5) := "000"&"0110"&"000"&"00"&"1001"; -- sub
		ROM(6) := "000"&"0110"&"000"&"00"&"0011"; -- inc
		ROM(7) := "000"&"0110"&"000"&"00"&"0100"; -- dec
		ROM(8) := "000"&"0000"&"000"&"00"&"1010"; -- beq
		ROM(9) := "000"&"0010"&"000"&"00"&"0000"; -- lri
		ROM(10) := "000"&"0111"&"000"&"00"&"0010"; -- display
		ROM(11) := "000"&"0000"&"010"&"00"&"0000"; -- beq2
		ROM(12) := "000"&"0000"&"000"&"00"&"0000"; -- empty
		ROM(13) := "000"&"0000"&"000"&"00"&"0000"; -- empty
		ROM(14) := "000"&"0000"&"000"&"00"&"0000"; -- empty
		ROM(15) := "000"&"0000"&"000"&"00"&"0000"; -- empty
		temp := ROM(state_val);
		
		c0 <= temp(0);
		sel <= temp(3 downto 1);
		
		r <= temp(4);
		cs <= temp(5);
		
		up <= temp(6);
		lp <= temp(7);
		clp <= temp(8);
		
		wt <= temp(9);
		lr <= temp(10);
		s0 <= temp(11);
		lir <= temp(12);

	wait on state;
	end process;
end behav;